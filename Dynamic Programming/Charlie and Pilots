#include <bits/stdc++.h>
using namespace std;

int f(int* a,int* c,int n,int x,int** dp){
    if(n==0 || x>n) return 0;
    if(dp[n][x]!=-1) return dp[n][x];
    int op1=INT_MAX,op2=INT_MAX;
    if(x==0) dp[n][x] = a[0] + f(a+1,c+1,n-1,1,dp);
    else if(x==n) dp[n][x] = c[0] + f(a+1,c+1,n-1,x-1,dp);
    else {
        op1 = a[0] + f(a+1,c+1,n-1,x+1,dp);
        op2 = c[0] + f(a+1,c+1,n-1,x-1,dp);
        dp[n][x] = min(op1,op2);
    }
    return dp[n][x];
}

int main()
{
    int n;
    cin>>n;
    int* a = new int[n];
    int* c = new int[n];
    for(int i=0;i<n;i++) cin>>c[i]>>a[i];
    int** dp = new int*[n+1];
    for(int i=0;i<=n;i++){
        dp[i] = new int[n+1];
        for(int j=0;j<=n;j++) dp[i][j] = -1;
    }
    cout<<f(a,c,n,0,dp)<<endl;
    return 0;
}
