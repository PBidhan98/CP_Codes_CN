#include <bits/stdc++.h>
using namespace std;

int f(int* a,int n,int k,int on,int*** dp){
    if(n==0 || k==0) return 0;
    if(dp[n][k][on]>-1) return dp[n][k][on];
    int op1 = f(a+1,n-1,k,on,dp);
    int op2 = 0;
    if(on)
        op2 = f(a+1,n-1,k-1,0,dp) + a[0];
    else {
        if(k>0) op2 = f(a+1,n-1,k,1,dp) - a[0];
    }
    dp[n][k][on] = max(op1,op2);
    return max(op1,op2);
}

int main()
{
    int q;
    cin>>q;
    while(q--){
        int k,n;
        cin>>k>>n;
        int* a = new int[n];
        for(int i=0;i<n;i++) cin>>a[i];
        int*** dp = new int**[n+1];
        for(int i=0;i<=n;i++){
            dp[i] = new int*[k+1];
            for(int j=0;j<=k;j++){
                dp[i][j] = new int[2];
                dp[i][j][0] = -1;
                dp[i][j][1] = -1;
            }
        }
        int ongoing = 0;
        cout<<f(a,n,k,ongoing,dp)<<endl;
    }
    return 0;
}
