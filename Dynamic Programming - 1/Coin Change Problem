int count(int n, int d[], int numD,int** output){
    if(n==0) return 1;
    if(numD==0) return 0;
    if(n<0) return 0;
    if(output[n][numD]>-1) return output[n][numD];
    int f = count(n-d[0], d, numD,output);
    int s = count(n, d+1, numD-1,output);
    output[n][numD] = f+s;
    return f+s;
}

int countWaysToMakeChange(int denominations[], int numDenominations, int value){
    int** output = new int*[value+1];
    for(int i=0;i<value+1;i++){
        output[i] = new int[numDenominations+1];
        for(int j=0;j<numDenominations+1;j++){
            output[i][j] = -1;
        }
    }
    int c = count(value, denominations,numDenominations, output);
    delete[] output;
    return c;
}
