int longestBitonicSubarray(int *input, int n) {
		
    int *lis = new int[n];
    lis[0] = 1;
    for(int i=1;i<n;i++){
        lis[i]=1;
        for(int j=i-1;j>=0;j--){
            if(input[i] > input[j]){
                int ans = lis[j]+1;
                if(ans > lis[i]) lis[i] = ans;
            }
        }
    }

    int *lds = new int[n];
    lds[n-1] = 1;
    for(int i=n-2;i>=0;i--){
        lds[i]=1;
        for(int j=i+1;j<n;j++){
            if(input[i] > input[j]){
                int ans = lds[j]+1;
                if(ans > lds[i]) lds[i] = ans;
            }
        }
    }
    
    int best=lis[0] + lds[0] - 1;
    for(int i=1;i<n;i++){
        if(best<lis[i] + lds[i]-1)
            best = lis[i] + lds[i]-1;
    }
    
    
    delete[] lis;
    delete[] lds;
    return best;
}

