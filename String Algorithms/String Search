// S and T - input strings
// You need to check if string T is present in S or not

#include <string.h>
using namespace std;
int* getLps(string pattern){
    int len = pattern.length();
    int* lps = new int[len];
    lps[0] = 0;
    int i=1,j=0;
    while(i<len){
        if(pattern[i] == pattern[j]) {
            lps[i] = j+1;
            j++;
            i++;
        }else{
            if(j!=0) j = lps[j-1];
            else {
                lps[i] = 0;
                i++;
            }
        }
    }
    return lps;
}

int findString(char text[], char pattern[]) {
    int lenText = strlen(text);
    int lenPat = strlen(pattern);
    int i=0,j=0;
    int* lps = getLps(pattern);
    while(i<lenText && j<lenPat){
        if(text[i] == pattern[j]){
            i++;
            j++;
        }else{
            if(j!=0) j = lps[j-1];
            else i++;
        }
    }
    if(j==lenPat) return i-lenPat;
    return -1;
}
